version: 2.1

commands:
  destroy-environment:
    steps:
      - run: chmod u+x destroy.yml
      - run: 
          name: Destroy environment
          command: ./destroy.yml
          when: on_fail

jobs:
  create_infrastructure:
    working_directory: ~/infrastructure
    docker: 
      - image: amazon/aws-cli:latest
    steps:
        - checkout
        - run: ls -a 
        - run: mkdir ~/.aws     
        - run: echo "[default]" >> ~/.aws/credentials
        - run: echo "aws_access_key_id=$aws_access_key_id" >> ~/.aws/credentials
        - run: echo "aws_secret_access_key=$aws_secret_access_key" >> ~/.aws/credentials
        - run: chmod u+x setup.sh
        - run: ./setup.sh
        - run: aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters "Name=tag:Name,Values=udacity-new" --output text >> inventory.txt
        - run: cat inventory.txt
        - save_cache:
            key: inventory-file
            paths:
              - ~/infrastructure/inventory.txt

              
  configure_infrastructure:
    working_directory: ~/infrastructure
    docker: 
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - restore_cache: 
          key: inventory-file
      - add_ssh_keys:
          fingerprints: ["1c:85:2e:39:d5:fb:01:5e:84:25:a8:b8:ad:86:cc:14"]
      - run:
          name: install dependencies
          command: |
            apk add --update ansible
      - run: ls -a      
      - run: cat inventory.txt
      - run: 
          name: configure server
          command: |
            ansible-playbook -i inventory.txt playbook.yml
      - persist_to_workspace:
            root: ~/infrastructure
            paths:
              - '*'      
              
  smoke_test:
    working_directory: ~/infrastructure
    docker:
      - image: python:3.7-alpine3.11         
    steps:
        - attach_workspace:
            at: ~/infrastructure
        - run: ls -a
        - run:
            name: install curl
            command: |
              apk --no-cache add curl
        - run: chmod u+x smoke.sh
        - run: 
            name: simualte error
            command: |
              return 1
        - destroy-environment
        
workflows:
  pipeline:
    jobs:
      - create_infrastructure
      - configure_infrastructure:
          requires: 
            - create_infrastructure
      - smoke_test:
          requires: 
            - configure_infrastructure
